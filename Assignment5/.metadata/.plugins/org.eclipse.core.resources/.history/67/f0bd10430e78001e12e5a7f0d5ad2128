package com.sunbeam;

public class BST {
	public class Node {
		private int data;
		private Node left;
		private Node right;

		Node(int data) {
			data = data;
			left = null;
			right = null;
		}
	}

	private Node root;

	BST() {
		root = null;

	}

	public boolean isEmpty() {
		return root == null;
	}

	private void addNode(int value) {
		Node newnode = new Node(value);
		if (isEmpty()) {
			root = newnode;
		}

		else {
			Node trav = root;
			while (true) {
				if (value < trav.data) {
					if (trav.left == null)
						trav.left = newnode;
					else
						trav = trav.left;
				} else {
					if (trav.right == null)
						trav.right = newnode;
					else
						trav = trav.right;
				}
			}

		}
	}
	
	void preOrder(Node trav) {
		// stop if trav is null
		if(trav == null)
			return;
		// visit current node (print data)
		System.out.print(" " + trav.data);
		// go into left of current node
		preOrder(trav.left);
		// go into right of current node
		preOrder(trav.right);
	}
	
	void preOrder() {
		System.out.print("PreOrder : ");
		preOrder(root);
		System.out.println("");
	}

}
